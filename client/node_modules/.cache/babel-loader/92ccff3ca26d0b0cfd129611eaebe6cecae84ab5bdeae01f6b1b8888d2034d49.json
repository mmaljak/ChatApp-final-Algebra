{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mario\\\\Desktop\\\\Learning\\\\Algebra-Learning\\\\Front-end\\\\ChatApp-final-Algebra\\\\client\\\\src\\\\components\\\\ChatContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport ChatBoxReceiver, { ChatBoxSender } from \"./ChatBox\";\nimport InputText from \"./InputText\";\nimport UserLogin from \"./UserLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatContainer() {\n  _s();\n  let socketio = socketIOClient(\"http://localhost:5000\");\n  const [chats, setChats] = useState([]);\n  const [user, setUser] = useState(localStorage.getItem(\"user\"));\n  const avatar = localStorage.getItem(\"avatar\");\n  useEffect(() => {\n    socketio.on(\"chat\", senderChats => {\n      setChats(senderChats);\n    });\n  });\n  function sendChatToSocket(chat) {\n    socketio.emit(\"chat\", chat);\n  }\n\n  //This will be called everytime a message has been added to the caht application\n  function addMessage(chat) {\n    const newChat = {\n      ...chat,\n      user,\n      avatar\n    };\n    setChats(...chats, newChat);\n    sendChatToSocket([...chats, newChat]);\n  }\n  function logout() {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"avatar\");\n    setUser(\"\");\n  }\n  function ChatsList() {\n    return chats.map((chat, index) => {\n      if (chat.user === user) return /*#__PURE__*/_jsxDEV(ChatBoxSender, {\n        message: chat.message,\n        avatar: chat.avatar,\n        user: chat.user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n      return /*#__PURE__*/_jsxDEV(ChatBoxReceiver, {\n        message: chat.message,\n        avatar: chat.avatar,\n        user: chat.user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Username: \", user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => logout(),\n          style: {\n            color: \"blue\",\n            cursor: \"pointer\"\n          },\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        addMessage: addMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UserLogin, {\n      setUser: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatContainer, \"J0UfSc6kN7ZgWoD5rnkMsCj4OAo=\");\n_c = ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useEffect","useState","socketIOClient","ChatBoxReceiver","ChatBoxSender","InputText","UserLogin","jsxDEV","_jsxDEV","ChatContainer","_s","socketio","chats","setChats","user","setUser","localStorage","getItem","avatar","on","senderChats","sendChatToSocket","chat","emit","addMessage","newChat","logout","removeItem","ChatsList","map","index","message","fileName","_jsxFileName","lineNumber","columnNumber","children","style","display","flexDirection","justifyContent","onClick","color","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Mario/Desktop/Learning/Algebra-Learning/Front-end/ChatApp-final-Algebra/client/src/components/ChatContainer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport ChatBoxReceiver, { ChatBoxSender } from \"./ChatBox\";\r\nimport InputText from \"./InputText\";\r\nimport UserLogin from \"./UserLogin\";\r\n\r\nexport default function ChatContainer() {\r\n  let socketio = socketIOClient(\"http://localhost:5000\");\r\n  const [chats, setChats] = useState([]);\r\n  const [user, setUser] = useState(localStorage.getItem(\"user\"));\r\n  const avatar = localStorage.getItem(\"avatar\");\r\n\r\n  useEffect(() => {\r\n    socketio.on(\"chat\", (senderChats) => {\r\n      setChats(senderChats);\r\n    });\r\n  });\r\n\r\n  function sendChatToSocket(chat) {\r\n    socketio.emit(\"chat\", chat);\r\n  }\r\n\r\n  //This will be called everytime a message has been added to the caht application\r\n  function addMessage(chat) {\r\n    const newChat = { ...chat, user, avatar };\r\n    setChats(...chats, newChat);\r\n    sendChatToSocket([...chats, newChat]);\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"avatar\");\r\n    setUser(\"\");\r\n  }\r\n\r\n  function ChatsList() {\r\n    return chats.map((chat, index) => {\r\n      if (chat.user === user)\r\n        return (\r\n          <ChatBoxSender\r\n            key={index}\r\n            message={chat.message}\r\n            avatar={chat.avatar}\r\n            user={chat.user}\r\n          />\r\n        );\r\n      return (\r\n        <ChatBoxReceiver\r\n          key={index}\r\n          message={chat.message}\r\n          avatar={chat.avatar}\r\n          user={chat.user}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <h4>Username: {user}</h4>\r\n            <p\r\n              onClick={() => logout()}\r\n              style={{ color: \"blue\", cursor: \"pointer\" }}\r\n            >\r\n              Log Out\r\n            </p>\r\n          </div>\r\n\r\n          <ChatsList />\r\n          <InputText addMessage={addMessage} />\r\n        </div>\r\n      ) : (\r\n        <UserLogin setUser={setUser} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}